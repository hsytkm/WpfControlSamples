<ContentControl x:Class="WpfControlSamples.Views.Menus.EventTriggerAction3Page"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:WpfControlSamples.Views.Menus"
                xmlns:behavior="clr-namespace:WpfControlSamples.Views.Behaviors"
                xmlns:system="clr-namespace:System;assembly=System.Runtime"
                mc:Ignorable="d" 
                d:DesignHeight="450" d:DesignWidth="800">

    <!-- 【WPF】【Blend 4 SDK】RemoveElementActionをを使ってみた。
            http://pro.art55.jp/?eid=1303850
    
         【WPF】【Blend 4 SDK】PlaySoundActionを使ってみた。
            http://pro.art55.jp/?eid=1303848
    
         【WPF】Blend 4 SDKを利用したサンプルコード
            http://pro.art55.jp/?eid=1303844
    -->
    <ContentControl.Resources>
        <system:Int32 x:Key="zero">0</system:Int32>
    </ContentControl.Resources>

    <ScrollViewer Margin="10" >
        <StackPanel>
            <TextBlock Margin="0,10,0,0" FontSize="{StaticResource FontSizeMedium}"
                       Text="EventTriggerAction3" />

            <!-- i:PropertyChangedTrigger -->
            <TextBlock Margin="10,5,0,0" >
                <Run Text="i:PropertyChangedTrigger" FontSize="{StaticResource FontSizeMicro}" />
                <Run Text="    プロパティ変化で Action を行う" />
            </TextBlock>
            <DockPanel Margin="20,5" >
                <TextBlock DockPanel.Dock="Top" Margin="0,0,0,5" Foreground="Blue"
                           Text="ItemsSource の変化時に SelectedIndex を 0 にする" />
                <Button DockPanel.Dock="Left" Padding="10,3" Content="Update"
                        Command="{Binding UpdateItemsSourceCommand, Mode=OneTime}" />
                <TextBlock DockPanel.Dock="Right" VerticalAlignment="Center"
                           Text="{Binding SelectedIndex, Source={x:Reference listBox1}, StringFormat='SelectedIndex: {0}'}" />
                <ListBox x:Name="listBox1" ItemsSource="{Binding Items, Mode=OneWay}" Margin="10,0" >
                    <i:Interaction.Triggers>
                        <i:PropertyChangedTrigger Binding="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                            <i:ChangePropertyAction TargetName="listBox1"
                                                    PropertyName="SelectedIndex" Value="{StaticResource zero}" />
                        </i:PropertyChangedTrigger>
                    </i:Interaction.Triggers>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ListBox>
            </DockPanel>

            <!-- ◆ここをチェックする  https://blog.okazuki.jp/entry/20130206/1360160261 -->
            
            <!-- i:TranslateZoomRotateBehavior  -->
            <TextBlock Margin="10,5,0,0" >
                <Run Text="i:TranslateZoomRotateBehavior" FontSize="{StaticResource FontSizeMicro}" />
                <Run Text="    コントロールの移動/ズーム (タッチ用らしい)" />
            </TextBlock>
            <DockPanel Margin="20,5" >
                <TextBlock DockPanel.Dock="Top" Margin="0,0,0,5" Foreground="Red"
                           Text="移動物がエリア境界でぶつかるようにしたい。調べてない。" />
                <CheckBox x:Name="checkBox2" Margin="0,10" Content="ClipToBounds" />
                <TextBlock DockPanel.Dock="Right" Width="50" >
                    <Run Text="{Binding MoveOffsetX, Mode=OneWay, StringFormat='X={0:f1}'}" />
                    <LineBreak />
                    <Run Text="{Binding MoveOffsetY, Mode=OneWay, StringFormat='Y={0:f1}'}" />
                </TextBlock>
                <Grid Height="60" Background="LightGray" Margin="20,0" 
                      ClipToBounds="{Binding IsChecked, Source={x:Reference checkBox2}}" >
                    <Border Height="40" Width="60" Background="LightCoral" >
                        <i:Interaction.Behaviors>
                            <i:TranslateZoomRotateBehavior SupportedGestures="Translate" />
                        </i:Interaction.Behaviors>

                        <!-- 以下でバインドしたかったけど、Errorが出てできなかった。なぜ…
                        <Border.RenderTransform>
                            <MatrixTransform Matrix="{Binding MyMatrix, Mode=TwoWay}" />
                        </Border.RenderTransform>
                        -->
                        <i:Interaction.Triggers>
                            <i:PropertyChangedTrigger Binding="{Binding RenderTransform.Matrix, 
                                                                        RelativeSource={RelativeSource AncestorType={x:Type Border}}}" >
                                <i:InvokeCommandAction Command="{Binding MatrixCommand}"
                                                       CommandParameter="{Binding RenderTransform.Matrix, 
                                                                                  RelativeSource={RelativeSource AncestorType={x:Type Border}}}" />
                            </i:PropertyChangedTrigger>
                        </i:Interaction.Triggers>

                        <TextBlock Text="movable" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </Grid>
            </DockPanel>


        </StackPanel>
    </ScrollViewer>

</ContentControl>
