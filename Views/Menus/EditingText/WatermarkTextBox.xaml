<UserControl x:Class="WpfControlSamples.Views.Menus.WatermarkTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:WpfControlSamples.Views.Menus"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid>
        <Panel.Resources>
            <SolidColorBrush x:Key="buttonMouseOver">DodgerBlue</SolidColorBrush>
        </Panel.Resources>

        <TextBox x:Name="textBox1"
                 Text="{Binding Text, Mode=TwoWay,
                                RelativeSource={RelativeSource AncestorType={x:Type local:WatermarkTextBox}},
                                UpdateSourceTrigger=PropertyChanged}" />

        <TextBlock Margin="5,0,0,0" Foreground="DarkGray"
                   IsHitTestVisible="False"
                   Text="{Binding WatermarkText, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:WatermarkTextBox}}}" >
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}" >
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, Mode=OneWay, Source={x:Reference Name=textBox1}}"
                                     Value="" >
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <!-- クリアボタン(文字が長くなるとボタンと被るが何もしていない…) -->
        <Button HorizontalAlignment="Right" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click" >
                    <i:ChangePropertyAction TargetName="textBox1" PropertyName="Text" Value="" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Button.Template>
                <ControlTemplate>
                    <ControlTemplate.Triggers>
                        <!-- 1. Textが空なら、LightGray -->
                        <!-- 2. Textが空でなければ、Black -->
                        <!-- 3. Textが空でなくマウスオーバーなら、Blue -->
                        <DataTrigger Binding="{Binding Text, Source={x:Reference Name=textBox1}}"
                                     Value="" >
                            <Setter Property="Foreground" Value="LightGray" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, Source={x:Reference Name=textBox1}, 
                                                       Converter={StaticResource EmptyStringToTrueConverter}}"
                                     Value="False" >
                            <Setter Property="Foreground" Value="Black" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Text, Source={x:Reference Name=textBox1},
                                                             Converter={StaticResource EmptyStringToTrueConverter}}"
                                           Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource buttonMouseOver}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                
                    <TextBlock Text="×■" FontWeight="Bold" Background="White" Margin="1" Padding="5,0"
                               Foreground="{Binding Foreground,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" />
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>

</UserControl>
