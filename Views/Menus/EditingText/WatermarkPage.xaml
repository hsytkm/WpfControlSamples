<ContentControl x:Class="WpfControlSamples.Views.Menus.WatermarkPage"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:local="clr-namespace:WpfControlSamples.Views.Menus"
                xmlns:helper="clr-namespace:WpfControlSamples.Views.Helpers"
                mc:Ignorable="d" 
                d:DesignHeight="450" d:DesignWidth="800">

    <StackPanel Margin="10" >
        <TextBlock DockPanel.Dock="Top"
                   Margin="0,10" FontSize="{StaticResource FontSizeMedium}"
                   Text="Watermarked TextBox" />

        <!-- Pattern 1 -->
        <TextBlock Margin="10,5"
                   Text="xamlのみで実現(TextBoxに名前を付ける必要がありだるい…)" />
        <Grid Margin="20,5" >
            <TextBox x:Name="textBox1" />

            <TextBlock Margin="5,0,0,0" IsHitTestVisible="False" Foreground="DarkGray"
                       Text="This is watermark1." >
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, Source={x:Reference Name=textBox1}}" Value="" >
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <!-- クリアボタン(文字が長くなるとボタンと被るが何もしていない…) -->
            <Button HorizontalAlignment="Right" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <i:ChangePropertyAction TargetName="textBox1" PropertyName="Text" Value="" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ControlTemplate.Triggers>
                                        <!-- 1. Textが空なら、LightGray -->
                                        <!-- 2. Textが空でなければ、Black -->
                                        <!-- 3. Textが空でなくマウスオーバーなら、Blue -->
                                        <DataTrigger Binding="{Binding Text, Source={x:Reference Name=textBox1}}" Value="" >
                                            <Setter Property="Foreground" Value="LightGray" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Text, Source={x:Reference Name=textBox1}, Converter={StaticResource EmptyStringToTrueConverter}}" Value="False" >
                                            <Setter Property="Foreground" Value="Black" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Text, Source={x:Reference Name=textBox1}, Converter={StaticResource EmptyStringToTrueConverter}}" Value="False" />
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="DodgerBlue" />
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>

                                    <TextBlock Text="×■" FontWeight="Bold" Background="White" Margin="1" Padding="5,0"
                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <!-- Pattern 2 -->
        <TextBlock Margin="10,20,0,5"
                   Text="上と同じ。 ベタ xaml を ContentControl にまとめただけ" />
        <local:WatermarkTextBox x:Name="watermarkTextBox"
                                Margin="20,5"
                                WatermarkText="This is watermark2." />

        <TextBlock Margin="20,5" Foreground="Gray"
                   Text="{Binding Text, Source={x:Reference watermarkTextBox}}" />

        <!-- Pattern 3 -->
        <TextBlock Margin="10,20,0,5"
                   Text="添付プロパティで実現（ウェブコピペ） ※やる気出たらクリアボタンを内蔵させたい…" />
        <AdornerDecorator Margin="20,5" >
            <TextBox>
                <helper:WatermarkService.Watermark>
                    <TextBlock Margin="5,0,0,0" Text="This is watermark3." />
                </helper:WatermarkService.Watermark>
            </TextBox>
        </AdornerDecorator>

    </StackPanel>

</ContentControl>
