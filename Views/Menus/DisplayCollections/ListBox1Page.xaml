<ContentControl x:Class="WpfControlSamples.Views.Menus.ListBox1Page"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:WpfControlSamples.Views.Menus"
                mc:Ignorable="d" 
                d:DesignHeight="450" d:DesignWidth="800">

    <DockPanel Margin="10" >
        <TextBlock DockPanel.Dock="Top"
                   Margin="0,10,0,0" FontSize="{StaticResource FontSizeMedium}"
                   Text="ListBox 1 (Single)" />

        <!-- ViewModel に SelecttedItem をバインドして表示してる(個人的にベタな実装) -->
        <StackPanel DockPanel.Dock="Top"
                    Margin="0,10,0,0"
                    Orientation="Horizontal" >
            <TextBlock Text="Binding SelectedItem :" FontWeight="Bold" FontStyle="Italic" />
            <Frame Width="12" Height="12"
                   Margin="20,0"
                   Background="{Binding SelectedColor.Color, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}" />
            <TextBlock>
                <Run Text="Selected Color : " />
                <Run Text="{Binding SelectedColor.Name, Mode=OneWay}"
                     Foreground="{Binding SelectedColor.Color, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"/>
            </TextBlock>
        </StackPanel>

        <!-- IsSynchronizedWithCurrentItem == true だと、ItemsSource の選択項目を直で参照できるので、ViewModel にバインド用プロパティが要素が不要。
             「Viewの選択項目に応じて、ViewModel から Modelを～する」には向いてないのかな？
             WPF4.5入門 その56「コレクションのバインディング」 https://blog.okazuki.jp/entry/2014/10/29/220236
        -->
        <StackPanel DockPanel.Dock="Top"
                    Margin="0,10"
                    Orientation="Horizontal" >
            <TextBlock Text="Use IsSynchronizedWithCurrentItem :" FontWeight="Bold" FontStyle="Italic" />
            <Frame Width="12" Height="12"
                   Margin="20,0"
                   Background="{Binding SourceColors/Color, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}" />
            <TextBlock>
                <Run Text="Selected Color : " />
                <Run Text="{Binding SourceColors/Name, Mode=OneWay}"
                     Foreground="{Binding SourceColors/Color, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"/>
            </TextBlock>
        </StackPanel>

        <ListBox ItemsSource="{Binding SourceColors, Mode=OneWay}"
                 SelectedItem="{Binding SelectedColor, Mode=TwoWay}"
                 IsSynchronizedWithCurrentItem="True"
                 SelectionMode="Single"
                 VirtualizingStackPanel.IsVirtualizing="True"
                 VirtualizingStackPanel.VirtualizationMode="Recycling" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <Border DockPanel.Dock="Left"
                                Margin="10"
                                Background="{Binding Color, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"
                                Width="50" Height="50" CornerRadius="50" />
                        <TextBlock DockPanel.Dock="Top"
                                   FontSize="{StaticResource FontSizeMedium}"
                                   Text="{Binding Name, Mode=OneWay}"
                                   Margin="10" />
                        <TextBlock Text="{Binding ColorLevel, Mode=OneWay}"
                                   Margin="10" />
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <!-- 仮想化してるつもり(効果を評価できてない。効果を雰囲気だけ見た) -->
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            
        </ListBox>
        
    </DockPanel>

</ContentControl>
