<ContentControl x:Class="WpfControlSamples.Views.Menus.ListView2Page"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:WpfControlSamples.Views.Menus"
                xmlns:ctrl="clr-namespace:WpfControlSamples.Views.Controls"
                xmlns:action="clr-namespace:WpfControlSamples.Views.Actions"
                xmlns:res="clr-namespace:WpfControlSamples.Views.Resources"
                mc:Ignorable="d" 
                d:DesignHeight="450" d:DesignWidth="800">

    <!-- ListViewの選択項目を取得/設定する
            https://qiita.com/wonderful_panda/items/36bf500094cc42f7ea97
    -->

    <ContentControl.Resources>
        <!-- select ListView -->
        <Style x:Key="selectItemContainerStyle1" TargetType="{x:Type ListViewItem}" >
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        </Style>
        <Style x:Key="selectItemContainerStyle2" TargetType="{x:Type ListViewItem}" >
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWay}" />
        </Style>
        <Style x:Key="selectListViewStyle" TargetType="{x:Type ListView}" >
            <Setter Property="Height" Value="100" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Margin" Value="10,0,20,0" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="SelectionMode" Value="Extended" />
        </Style>

        <!-- preview ItemsControl -->
        <ItemsPanelTemplate x:Key="previewItemsPanelTemplate" >
            <WrapPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
        <DataTemplate x:Key="previewDataTemplate" >
            <TextBlock Text="{Binding Name, Mode=OneTime}" Margin="5" >
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" >
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, Mode=OneWay}" Value="True" >
                                <Setter Property="Background" Value="Orange" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, Mode=OneWay}" Value="False" >
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DataTemplate>
        <Style x:Key="previewItemsControlStyle" TargetType="{x:Type ItemsControl}" >
            <Setter Property="Background" Value="AliceBlue" />
            <Setter Property="ItemsPanel" Value="{StaticResource previewItemsPanelTemplate}" />
            <Setter Property="ItemTemplate" Value="{StaticResource previewDataTemplate}" />
        </Style>

        <!-- selectIndex ComboBox -->
        <Style x:Key="selectIndexComboBoxStyle" TargetType="{x:Type ComboBox}" >
            <Setter Property="Width" Value="100" />
            <Setter Property="Margin" Value="0,10" />
            <Setter Property="res:InteractivityItems.Template">
                <Setter.Value>
                    <!-- Interaction Triggers in Style in ResourceDictionary WPF -->
                    <res:InteractivityTemplate>
                        <res:InteractivityItems>
                            <res:InteractivityItems.Triggers>
                                <i:PropertyChangedTrigger Binding="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                                    <action:SelectorSelectedIndexZeroAction />
                                </i:PropertyChangedTrigger>
                            </res:InteractivityItems.Triggers>
                        </res:InteractivityItems>
                    </res:InteractivityTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ContentControl.Resources>

    <DockPanel Margin="10" >
        <TextBlock DockPanel.Dock="Top"
                   Margin="0,10,0,0" FontSize="{StaticResource FontSizeMedium}"
                   Text="ListView2" />

        <ctrl:HyperlinkTextBlock DockPanel.Dock="Top" Margin="10,5"
                                 Text="[Qiita] ListViewの選択項目を取得/設定する"
                                 NavigateUri="https://qiita.com/wonderful_panda/items/36bf500094cc42f7ea97" />

        <!-- Sample1 -->
        <DockPanel DockPanel.Dock="Top" Margin="10,0" Height="180" >
            <Panel.DataContext>
                <local:ListView2ViewModel1 />
            </Panel.DataContext>
            
            <TextBlock DockPanel.Dock="Top" FontSize="{StaticResource FontSizeSmall}"
                       Text="Sample1 (ViewModel1)" />
            <TextBlock DockPanel.Dock="Top" Margin="10,5,10,10" >
                ListView はデフォルトで仮想化されるため、表示範囲＋α しか ListViewItem インスタンスが生成されない。
                <LineBreak/>
                IsSelected プロパティでアイテムの背景色を変えているが、仮想化により "Ctrl + A" で全ての色が変わらない。
            </TextBlock>

            <ListView DockPanel.Dock="Left" Style="{StaticResource selectListViewStyle}"
                      ItemContainerStyle="{StaticResource selectItemContainerStyle1}"
                      ItemsSource="{Binding SourceItems, Mode=OneTime}" >
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name, Mode=OneTime}" />
                    </GridView>
                </ListView.View>
            </ListView>

            <StackPanel DockPanel.Dock="Right" Margin="10,0" >
                <TextBlock Text="Control from VM" />
                <ComboBox x:Name="comboBox1" Style="{StaticResource selectIndexComboBoxStyle}"
                          ItemsSource="{Binding SelectableIndex, Mode=OneTime}" />
                <Button Padding="5" Content="Toggle IsSelected"
                        Command="{Binding ToggleIsSelectedCommand, Mode=OneTime}"
                        CommandParameter="{Binding SelectedItem, Source={x:Reference comboBox1}}"/>
            </StackPanel>

            <ItemsControl Style="{StaticResource previewItemsControlStyle}"
                          ItemsSource="{Binding SourceItems, Mode=OneTime}" />
        </DockPanel>

        <!-- Sample2 -->
        <DockPanel Margin="10,10,10,0" Height="200" >
            <Panel.DataContext>
                <local:ListView2ViewModel2 />
            </Panel.DataContext>

            <TextBlock DockPanel.Dock="Top" FontSize="{StaticResource FontSizeSmall}"
                       Text="Sample2 (ViewModel2)" />
            <TextBlock DockPanel.Dock="Top" Margin="10,5,10,10" >
                改善版：SelectionChanged イベントの SelectionChangedEventArgs を使用
                <LineBreak/>
                　VM⇒V の通知が対応できていない (Ctrl + A で全選択 → 0 が見えない位置にスクロール → VM で 0 を未選択にする
                <LineBreak/>
                　→ 0 にスクロール戻すと View のみ "選択" になっている）
            </TextBlock>

            <ListView DockPanel.Dock="Left" Style="{StaticResource selectListViewStyle}"
                      ItemContainerStyle="{StaticResource selectItemContainerStyle2}"
                      ItemsSource="{Binding SourceItems, Mode=OneTime}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged" >
                        <action:NotifySelectedItemsAction NotifySelectedItemsCollection="{Binding NotifySelectedViewItems, Mode=OneTime}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name, Mode=OneTime}" />
                    </GridView>
                </ListView.View>
            </ListView>

            <StackPanel DockPanel.Dock="Right" Margin="10,0" >
                <TextBlock Text="Control from VM" />
                <ComboBox x:Name="comboBox2" Style="{StaticResource selectIndexComboBoxStyle}"
                          ItemsSource="{Binding SelectableIndex, Mode=OneTime}" />
                <Button Padding="5" Content="Toggle IsSelected"
                        Command="{Binding ToggleIsSelectedCommand, Mode=OneTime}"
                        CommandParameter="{Binding SelectedItem, Source={x:Reference comboBox2}}"/>
            </StackPanel>

            <ItemsControl Style="{StaticResource previewItemsControlStyle}"
                          ItemsSource="{Binding SourceItems, Mode=OneTime}" />
        </DockPanel>

    </DockPanel>

</ContentControl>
