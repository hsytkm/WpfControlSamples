<ContentControl
    x:Class="WpfControlSamples.Views.Menus.CheckBox2Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WpfControlSamples.Views.Menus"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <!--
        How to make checkbox bigger
        https://stackoverflow.com/questions/13481275/how-to-make-checkbox-bigger/70371693#70371693
    -->
    <StackPanel Margin="10">
        <TextBlock
            Margin="0,10,0,0"
            FontSize="{StaticResource FontSizeMedium}"
            Text="CheckBox 2" />

        <TextBlock
            Margin="10"
            FontSize="{StaticResource FontSizeMicro}"
            Text="Checkbox bigger" />

        <CheckBox
            Margin="20"
            HorizontalAlignment="Center"
            Content="Normal Style" />

        <Grid>
            <Panel.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="2"
                                    SnapsToDevicePixels="True"
                                    Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                    StrokeDashArray="1 2"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="OptionMarkFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="14,0,0,0"
                                    SnapsToDevicePixels="True"
                                    Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                    StrokeDashArray="1 2"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
                <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
                <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
                <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
                <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
                <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
                <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
                <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
                <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
                <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
                <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
                <Style x:Key="CheckBoxLarge" TargetType="{x:Type CheckBox}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid
                                    x:Name="templateRoot"
                                    Background="Transparent"
                                    SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        x:Name="checkBoxBorder"
                                        Margin="1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid
                                            x:Name="markGrid"
                                            Width="24"
                                            Height="24">
                                            <!--  Width,Height,Stretch="Uniform",Margin  -->
                                            <Path
                                                x:Name="optionMark"
                                                Margin="4"
                                                Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                                Fill="{StaticResource OptionMark.Static.Glyph}"
                                                Opacity="0"
                                                Stretch="Uniform" />
                                            <Rectangle
                                                x:Name="indeterminateMark"
                                                Margin="4"
                                                Fill="{StaticResource OptionMark.Static.Glyph}"
                                                Opacity="0" />
                                        </Grid>
                                    </Border>
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        Grid.Column="1"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="False"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasContent" Value="True">
                                        <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                        <Setter Property="Padding" Value="4,-1,0,0" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                        <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                        <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                        <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                        <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                                        <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                        <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                        <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="{x:Null}">
                                        <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                        <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Panel.Resources>

            <CheckBox
                Margin="20"
                HorizontalAlignment="Center"
                VerticalContentAlignment="Center"
                Content="Normal Style"
                Style="{StaticResource CheckBoxLarge}" />
        </Grid>

    </StackPanel>
</ContentControl>
