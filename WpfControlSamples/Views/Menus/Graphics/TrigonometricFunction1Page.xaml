<ContentControl x:Class="WpfControlSamples.Views.Menus.TrigonometricFunction1Page"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:WpfControlSamples.Views.Menus"
                xmlns:conv="clr-namespace:WpfControlSamples.Views.Converters"
                xmlns:action="clr-namespace:WpfControlSamples.Views.Actions"
                xmlns:atprop="clr-namespace:WpfControlSamples.Views.AttachedProperties"
                mc:Ignorable="d" 
                d:DesignHeight="450" d:DesignWidth="800">

    <ContentControl.Resources>
        <conv:PointArrayToPointCollectionConverter x:Key="PointArrayToPointCollectionConverter" />
        <conv:EllipseSizeToMarginConverter x:Key="EllipseSizeToMarginConverter" />
        
        <Brush x:Key="blackBrush">Black</Brush>
        <Brush x:Key="redBrush">Red</Brush>

        <Brush x:Key="lineBrush">Coral</Brush>
        <Brush x:Key="triangleBrush">DodgerBlue</Brush>
        <Brush x:Key="quadrangleBrush">Green</Brush>

        <Style x:Key="propertyTextBlockStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="Margin" Value="8,0,0,5" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style x:Key="cornerEllipseStyle" TargetType="{x:Type Ellipse}" >
            <Setter Property="Width" Value="10" />
            <Setter Property="Height" Value="10" />
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="Stroke" Value="DimGray" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>
        <Style x:Key="dotEllipseStyle" TargetType="{x:Type Ellipse}" >
            <Setter Property="Width" Value="4" />
            <Setter Property="Height" Value="4" />
            <Setter Property="Margin" Value="-2,-2,0,0" />
            <Setter Property="StrokeThickness" Value="1" />
            <Setter Property="Stroke" Value="DimGray" />
            <Setter Property="Fill" Value="DarkGray" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="scribedCircleEllipseStyle" TargetType="{x:Type Ellipse}" >
            <Setter Property="StrokeThickness" Value="1" />
            <Setter Property="Opacity" Value="0.3" />
            <Setter Property="Fill" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="infomationBorderStyle" TargetType="{x:Type Border}" >
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="Margin" Value="0,0,5,0" />
        </Style>
        <Style x:Key="infomationTitleTextBlockStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="Margin" Value="0,0,0,5" />
            <Setter Property="TextDecorations" Value="Underline" />
            <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        </Style>
        <Style x:Key="axisLine" TargetType="{x:Type Line}" >
            <Setter Property="Stroke" Value="Gray" />
            <Setter Property="StrokeThickness" Value="0.5" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style TargetType="{x:Type Line}" >
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style x:Key="pointTitleTextBlockStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="Margin" Value="-20,-20,0,0" />
            <Setter Property="Padding" Value="3,1" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="arrowPolyLineStyle" TargetType="{x:Type Polyline}" >
            <Setter Property="Stroke" Value="{StaticResource lineBrush}" />
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style TargetType="{x:Type Polyline}" >
            <Setter Property="Stroke" Value="Gray" />
            <Setter Property="StrokeThickness" Value="1" />
            <Setter Property="StrokeDashArray" Value="1 2" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <ControlTemplate x:Key="thumbTemplate" TargetType="{x:Type Thumb}" >
            <Grid Margin="-5,-5,0,0" >
                <TextBlock Style="{StaticResource pointTitleTextBlockStyle}"
                           Text="{Binding Path=(atprop:AttachedBuiltIn.Text), RelativeSource={RelativeSource AncestorType={x:Type Thumb}}}"
                           Foreground="{TemplateBinding Background}" />
                <Ellipse Style="{StaticResource cornerEllipseStyle}"
                         Fill="{TemplateBinding Background}" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="thumbStyle" TargetType="{x:Type Thumb}" >
            <Setter Property="Template" Value="{StaticResource thumbTemplate}" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>
    </ContentControl.Resources>

    <DockPanel Margin="10" >
        <TextBlock DockPanel.Dock="Top" FontSize="{StaticResource FontSizeMedium}"
                   Text="三角関数" />

        <Grid DockPanel.Dock="Top" Margin="10" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Line -->
            <Border Style="{StaticResource infomationBorderStyle}"
                    BorderBrush="{StaticResource lineBrush}" >
                <StackPanel>
                    <TextBlock Text="Line" Style="{StaticResource infomationTitleTextBlockStyle}" />
                    <TextBlock Style="{StaticResource propertyTextBlockStyle}" >
                        <TextBlock.Foreground>
                            <Binding Path="LineIsValid" >
                                <Binding.Converter>
                                    <conv:BooleanToObjectConverter TrueObject="{StaticResource blackBrush}" FalseObject="{StaticResource redBrush}" />
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Foreground>
                        <Run Text="{Binding LinePoints[0], Mode=OneWay, StringFormat='P0 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding LinePoints[1], Mode=OneWay, StringFormat='P1 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding LineDistance, Mode=OneWay, StringFormat='Distance : {0:f2}'}" />
                        <LineBreak />
                        <Run Text="{Binding LineSlope, Mode=OneWay, StringFormat='Slope(a) : {0:f2}'}" />
                        <LineBreak />
                        <Run Text="{Binding LineIntercept, Mode=OneWay, StringFormat='Intercept(b) : {0:f2}'}" />
                    </TextBlock>
                </StackPanel>
            </Border>

            <!-- Triangle -->
            <Border Grid.Column="1" Style="{StaticResource infomationBorderStyle}"
                    BorderBrush="{StaticResource triangleBrush}" >
                <StackPanel>
                    <TextBlock Text="Triangle" Style="{StaticResource infomationTitleTextBlockStyle}" />
                    <TextBlock Style="{StaticResource propertyTextBlockStyle}" >
                        <TextBlock.Foreground>
                            <Binding Path="TriangleIsValid" >
                                <Binding.Converter>
                                    <conv:BooleanToObjectConverter TrueObject="{StaticResource blackBrush}" FalseObject="{StaticResource redBrush}" />
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Foreground>
                        <Run Text="{Binding TrianglePoints[0], Mode=OneWay, StringFormat='P0 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding TrianglePoints[1], Mode=OneWay, StringFormat='P1 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding TrianglePoints[2], Mode=OneWay, StringFormat='P2 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding TriangleAngle012, Mode=OneWay, StringFormat='∠012 : {0:f2}°'}" />
                        <LineBreak />
                        <Run Text="{Binding TriangleArea, Mode=OneWay, StringFormat='面積 : {0:f2}'}" />
                        <!-- ◆座標系の変換に未対応
                        <LineBreak />
                        <Run Text="{Binding TriangleCenterPoint, Mode=OneWay, StringFormat='重心 : {0:f1}'}" />
                        <LineBreak />
                        <Run Text="{Binding TriangleCircumscribedCircleCenterPoint, Mode=OneWay, StringFormat='外心 : {0:f1}'}" />
                        -->
                        <LineBreak />
                        <Run Text="{Binding TriangleCircumscribedCircleDiameterSize.Width, Mode=OneWay, StringFormat='外接円直径 : {0:f1}'}" />
                    </TextBlock>
                </StackPanel>
            </Border>

            <!-- Quadrangle -->
            <Border Grid.Column="2" Style="{StaticResource infomationBorderStyle}"
                    BorderBrush="{StaticResource quadrangleBrush}" >
                <StackPanel>
                    <TextBlock Text="Quadrangle" Style="{StaticResource infomationTitleTextBlockStyle}" />
                    <TextBlock Style="{StaticResource propertyTextBlockStyle}" >
                        <TextBlock.Foreground>
                            <Binding Path="QuadrangleIsValid" >
                                <Binding.Converter>
                                    <conv:BooleanToObjectConverter TrueObject="{StaticResource blackBrush}" FalseObject="{StaticResource redBrush}" />
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Foreground>
                        <Run Text="{Binding QuadranglePoints[0], Mode=OneWay, StringFormat='P0 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding QuadranglePoints[1], Mode=OneWay, StringFormat='P1 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding QuadranglePoints[2], Mode=OneWay, StringFormat='P2 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding QuadranglePoints[3], Mode=OneWay, StringFormat='P3 : ({0:f2})'}" />
                        <LineBreak />
                        <Run Text="{Binding QuadrangleArea, Mode=OneWay, StringFormat='面積 : {0:f2}'}" />
                        <!-- ◆座標系の変換に未対応
                        <LineBreak />
                        <Run Text="{Binding QuadrangleCenterPoint, Mode=OneWay, StringFormat='重心 : {0:f1}'}" />
                        -->
                    </TextBlock>
                </StackPanel>
            </Border>
        </Grid>

        <Canvas Margin="15,15,15,0" Background="LightGray" >
            <!-- 原点 -->
            <Line x:Name="lineAxisX" Style="{StaticResource axisLine}" />
            <Line x:Name="lineAxisY" Style="{StaticResource axisLine}" />
            <Thumb x:Name="originPoint" Background="Gray"
                   atprop:AttachedBuiltIn.Text="Origin"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />

            <!-- Line -->
            <Line x:Name="line1" Stroke="{StaticResource lineBrush}" />
            <Polyline Style="{StaticResource arrowPolyLineStyle}"
                      Points="{Binding LineArrowPoints, Mode=OneWay, Converter={StaticResource PointArrayToPointCollectionConverter}}" />
            <Thumb x:Name="thumbPoint0" Canvas.Left="20" Canvas.Top="50"
                   atprop:AttachedBuiltIn.Text="{Binding LinePointNames[0], Mode=OneWay}"
                   Background="{StaticResource lineBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />
            <Thumb x:Name="thumbPoint1" Canvas.Left="10" Canvas.Top="10"
                   atprop:AttachedBuiltIn.Text="{Binding LinePointNames[1], Mode=OneWay}"
                   Background="{StaticResource lineBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />

            <!-- Triangle -->
            <Line x:Name="triangleLine0" Stroke="{StaticResource triangleBrush}" />
            <Line x:Name="triangleLine1" Stroke="{StaticResource triangleBrush}" />
            <Line x:Name="triangleLine2" Stroke="{StaticResource triangleBrush}" />
            <Polyline Points="{Binding TriangleAssistShapePoints, Mode=OneWay, Converter={StaticResource PointArrayToPointCollectionConverter}}" />
            <Ellipse Style="{StaticResource dotEllipseStyle}" Fill="{StaticResource triangleBrush}" >
                <i:Interaction.Triggers>
                    <i:PropertyChangedTrigger Binding="{Binding TriangleCenterPoint, Mode=OneWay}" >
                        <action:SetCanvasLeftTopAction />
                    </i:PropertyChangedTrigger>
                </i:Interaction.Triggers>
            </Ellipse>
            
            <!-- 外接円 -->
            <Ellipse Style="{StaticResource scribedCircleEllipseStyle}"
                     Stroke="{StaticResource triangleBrush}"
                     Width="{Binding TriangleCircumscribedCircleDiameterSize.Width, Mode=OneWay}"
                     Height="{Binding TriangleCircumscribedCircleDiameterSize.Height, Mode=OneWay}"
                     Margin="{Binding TriangleCircumscribedCircleDiameterSize, Mode=OneWay, Converter={StaticResource EllipseSizeToMarginConverter}}" >
                <i:Interaction.Triggers>
                    <i:PropertyChangedTrigger Binding="{Binding TriangleCircumscribedCircleCenterPoint, Mode=OneWay}" >
                        <action:SetCanvasLeftTopAction />
                    </i:PropertyChangedTrigger>
                </i:Interaction.Triggers>
            </Ellipse>

            <!-- 内接円 -->
            <Ellipse Style="{StaticResource scribedCircleEllipseStyle}"
                     Stroke="{StaticResource triangleBrush}"
                     Width="{Binding TriangleInscribedCircleDiameterSize.Width, Mode=OneWay}"
                     Height="{Binding TriangleInscribedCircleDiameterSize.Height, Mode=OneWay}"
                     Margin="{Binding TriangleInscribedCircleDiameterSize, Mode=OneWay, Converter={StaticResource EllipseSizeToMarginConverter}}" >
                <i:Interaction.Triggers>
                    <i:PropertyChangedTrigger Binding="{Binding TriangleInscribedCircleCenterPoint, Mode=OneWay}" >
                        <action:SetCanvasLeftTopAction />
                    </i:PropertyChangedTrigger>
                </i:Interaction.Triggers>
            </Ellipse>
            
            <Thumb x:Name="thumbPoint3_0" Canvas.Left="100" Canvas.Top="30"
                   atprop:AttachedBuiltIn.Text="{Binding TrianglePointNames[0], Mode=OneWay}"
                   Background="{StaticResource triangleBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />
            <Thumb x:Name="thumbPoint3_1" Canvas.Left="200" Canvas.Top="60"
                   atprop:AttachedBuiltIn.Text="{Binding TrianglePointNames[1], Mode=OneWay}"
                   Background="{StaticResource triangleBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />
            <Thumb x:Name="thumbPoint3_2" Canvas.Left="120" Canvas.Top="90"
                   atprop:AttachedBuiltIn.Text="{Binding TrianglePointNames[2], Mode=OneWay}"
                   Background="{StaticResource triangleBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />

            <!-- Quadrangle -->
            <Line x:Name="quadrangleLine0" Stroke="{StaticResource quadrangleBrush}" />
            <Line x:Name="quadrangleLine1" Stroke="{StaticResource quadrangleBrush}" />
            <Line x:Name="quadrangleLine2" Stroke="{StaticResource quadrangleBrush}" />
            <Line x:Name="quadrangleLine3" Stroke="{StaticResource quadrangleBrush}" />
            <Polyline Points="{Binding QuadrangleAssistShapePoints, Mode=OneWay, Converter={StaticResource PointArrayToPointCollectionConverter}}" />
            <Ellipse Style="{StaticResource dotEllipseStyle}" Fill="{StaticResource quadrangleBrush}" >
                <i:Interaction.Triggers>
                    <i:PropertyChangedTrigger Binding="{Binding QuadrangleCenterPoint, Mode=OneWay}" >
                        <action:SetCanvasLeftTopAction />
                    </i:PropertyChangedTrigger>
                </i:Interaction.Triggers>
            </Ellipse>
            <Thumb x:Name="thumbPoint4_0" Canvas.Left="20" Canvas.Top="130"
                   atprop:AttachedBuiltIn.Text="{Binding QuadranglePointNames[0], Mode=OneWay}"
                   Background="{StaticResource quadrangleBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />
            <Thumb x:Name="thumbPoint4_1" Canvas.Left="140" Canvas.Top="120"
                   atprop:AttachedBuiltIn.Text="{Binding QuadranglePointNames[1], Mode=OneWay}"
                   Background="{StaticResource quadrangleBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />
            <Thumb x:Name="thumbPoint4_2" Canvas.Left="210" Canvas.Top="160"
                   atprop:AttachedBuiltIn.Text="{Binding QuadranglePointNames[2], Mode=OneWay}"
                   Background="{StaticResource quadrangleBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />
            <Thumb x:Name="thumbPoint4_3" Canvas.Left="50" Canvas.Top="190"
                   atprop:AttachedBuiltIn.Text="{Binding QuadranglePointNames[3], Mode=OneWay}"
                   Background="{StaticResource quadrangleBrush}"
                   Style="{StaticResource thumbStyle}" DragDelta="PointThumb_DragDelta" />

        </Canvas>
    </DockPanel>
</ContentControl>
