<ContentControl x:Class="WpfControlSamples.Views.Menus.FolderDialogPage"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:WpfControlSamples.Views.Menus"
                xmlns:ctrl="clr-namespace:WpfControlSamples.Views.Controls"
                xmlns:action="clr-namespace:WpfControlSamples.Views.Actions"
                mc:Ignorable="d" 
                d:DesignHeight="450" d:DesignWidth="800">

    <!-- Is there some way to use a folder seletor (FolderBrowserDialog) in WPF Core?
            https://stackoverflow.com/questions/58569627/is-there-some-way-to-use-a-folder-seletor-folderbrowserdialog-in-wpf-core

         WPF > フォルダ選択
            https://qiita.com/sugasaki/items/008c4f5c0589f0bf5962
    
         WPF MVVM L@bo #2 ～ MVVM さえあればいい。 ～
            https://elf-mission.net/programming/wpf/mvvm-labo/phase02/#FolderBrowserDialog
    -->
    
    <DockPanel Margin="10" >
        <TextBlock DockPanel.Dock="Top" Margin="0,10"
                   FontSize="{StaticResource FontSizeMedium}"
                   Text="OpenFolderDialog" />

        <TextBlock DockPanel.Dock="Top" Margin="10"
                   FontSize="{StaticResource FontSizeMicro}"
                   Text="フォルダ選択は WPF標準で提供されていないので対応が必要。" />

        <!-- Pattern 1 : あやしいNuGetパッケージ -->
        <StackPanel DockPanel.Dock="Top" Margin="10,0" Background="LightBlue" >
            <ctrl:HyperlinkTextBlock Margin="10"
                                     FontSize="{StaticResource FontSizeMicro}"
                                     Text="aybe/Windows-API-Code-Pack-1.1"
                                     NavigateUri="https://github.com/aybe/Windows-API-Code-Pack-1.1"/>
            <TextBlock Margin="20,0"
                       Text="NuGetパッケージが増えるとややこしいので、プロジェクトを分けた。" />

            <WrapPanel Margin="20,10" >
                <Button Margin="20,0" Padding="10" Width="150"
                        Content="Open Single"
                        Click="FolderOpenSingleButton_Click" />

                <Button Margin="20,0" Padding="10" Width="150"
                        Content="Open Multi"
                        Click="FolderOpenMultiButton_Click" />
            </WrapPanel>
        </StackPanel>

        <!-- Pattern 2 : Livetやけど、内部であやしいNuGetパッケージを使用していそう -->
        <StackPanel DockPanel.Dock="Top" Margin="10,0" Background="LightPink" >
            <ctrl:HyperlinkTextBlock Margin="10"
                                     FontSize="{StaticResource FontSizeMicro}"
                                     Text="runceel/LivetExtensions"
                                     NavigateUri="https://github.com/runceel/Livet"/>
            <TextBlock Margin="20,0,20,10"
                       Text="本流にパッケージ導入したくないので無効にしています。(実装済みでコメント化)" />

            <!-- 非推奨なので無効化
            <WrapPanel Margin="20,10" >
                <Button Margin="20,0" Padding="10" Width="150"
                        Content="Open Single" IsEnabled="False" >
                    <Button.IsEnabled>True</Button.IsEnabled>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:FolderBrowserDialogInteractionMessageAction>
                                <l:DirectInteractionMessage CallbackMethodTarget="{Binding Mode=OneWay}" CallbackMethodName="DirectorySelect">
                                    <l:FolderSelectionMessage Title="ふぉるだをひらきます"
                                                              Description="～～のフォルダを選択して下さい"
                                                              DialogPreference="None"
                                                              SelectedPath="{Binding SelectedFolderPath, Mode=OneWay}"/>
                                </l:DirectInteractionMessage>
                            </l:FolderBrowserDialogInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                    <TextBlock Text="Multi選択の作法は不明（未調査）" />
                </Button>
            </WrapPanel>
            -->
        </StackPanel>

        <!-- Pattern 3 : P/Invoke のあやしさあるけど、あやしさパッケージよりマシかも。-->
        <StackPanel DockPanel.Dock="Top" Margin="10,0" Background="LightGreen" >
            <ctrl:HyperlinkTextBlock Margin="10"
                                     FontSize="{StaticResource FontSizeMicro}"
                                     Text="P/Invoke ネイティブ ライブラリーのダイアログ"
                                     NavigateUri="https://shikaku-sh.hatenablog.com/entry/wpf-folder-selection-dialog#PInvoke-%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96-%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%83%BC%E3%81%AE%E3%83%80%E3%82%A4%E3%82%A2%E3%83%AD%E3%82%B0"/>
            <TextBlock Margin="20,0"
                       Text="Nugetの導入なく一番すっきりする(コードは泥臭いけど)  複数フォルダ選択は未調査…" />

            <WrapPanel Margin="20,10" >
                <Button Margin="20,0,5,0" Padding="5,10" Width="150"
                        Content="Open Single (Click)"
                        Click="PInvokeFolderOpenSingleButton_Click" />
                <Button Margin="20,0" Padding="10" Width="180"
                        Content="Open Single (Command)"
                        Command="{Binding FolderOpenDialogCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type local:FolderDialogPage}}}" />

                <!-- Viewのフォルダ選択オススメ！ -->
                <Button Margin="20,5,20,0" Padding="10" Width="150"
                        Content="Open Single (Action)" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click" >
                            <action:OpenFolderDialogAction Title="Open folder"
                                                           SelectedFolderPath="{Binding SelectedFolderPath, Mode=TwoWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <!-- おまけ：選択した結果をCommandParameterにInvoke -->
                <Button Margin="20,5,20,0" Padding="10" Width="150"
                        Content="Open Single (Action)" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click" >
                            <action:OpenFolderDialogThenInvokeCommandAction
                                Title="Open folder"
                                Command="{Binding ShowMessageBoxCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type local:FolderDialogPage}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </WrapPanel>
        </StackPanel>

        <!-- Selected result -->
        <TextBlock DockPanel.Dock="Top" Margin="30,5" 
                   VerticalAlignment="Center"
                   FontSize="{StaticResource FontSizeMicro}"
                   Text="{Binding SelectedFolderPath, Mode=OneWay}" />

        <ctrl:HyperlinkTextBlock DockPanel.Dock="Top"
                                 FontSize="{StaticResource FontSizeMicro}"
                                 Text="CsWin32 を使用した P/Invoke FolderDialog ◆オススメ"
                                 NavigateUri="https://github.com/hsytkm/PInvokeFolderOpener"/>

        <Border/>
    </DockPanel>

</ContentControl>
